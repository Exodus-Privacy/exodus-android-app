---
name: Release

env:
    EXODUS_API_KEY: ${{secrets.EXODUS_API_KEY}}
    KEYSTORE: ${{secrets.RELEASE_KEYSTORE}}
    KEYSTORE_PGP_PASSPHRASE: ${{secrets.RELEASE_KEYSTORE_PGP_PASSPHRASE}}
    KEYSTORE_PASSWORD: ${{secrets.RELEASE_KEYSTORE_PASSPHRASE}}
    KEYSTORE_ALIAS: ${{secrets.RELEASE_KEYSTORE_ALIAS}}
    KEYSTORE_PASSPHRASE: ${{secrets.RELEASE_KEYSTORE_ALIAS_PASSPHRASE}}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    tags:
      - release-v*
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Remove network security config
        run: |
          rm ./app/src/main/res/xml/network_security_config.xml
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Decode Keystore
        run: |
          echo "${{secrets.RELEASE_KEYSTORE}}" > release.keystore.asc
          gpg -d --passphrase "${{secrets.RELEASE_KEYSTORE_PGP_PASSPHRASE}}" --batch release.keystore.asc > app/release.keystore
      - name: Generate release build
        run: ./gradlew assembleRelease
      - name: Execute exodus-standalone
        uses: docker://exodusprivacy/exodus-standalone:v1.3.2
        with:
          args: /github/workspace/app/build/outputs/apk/release/app-release.apk
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app_release
          path: app/build/outputs/apk/release/app-release.apk
      - name: Create release
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: gh release create ${{ github.ref }} --generate-notes
      - name: Upload APK on release
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: gh release upload ${{ github.ref_name }} app/build/outputs/apk/release/app-release.apk#exodus-android-app_${{ github.ref_name }}
