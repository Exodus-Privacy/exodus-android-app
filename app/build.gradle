plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionCode 15
        versionName "3.1.0"
        testInstrumentationRunner 'org.eu.exodus_privacy.exodusprivacy.ExodusTestRunner'
        buildConfigField "String", "EXODUS_API_KEY", "\"$System.env.EXODUS_API_KEY\""
        javaCompileOptions {
            annotationProcessorOptions {
                compilerArgumentProviders(
                        new RoomSchemaArgProvider(new File(projectDir, "schemas"))
                )
            }
        }
        resourceConfigurations += ['en', 'ar', 'ca', 'de', 'el', 'fr', 'it', 'pt_BR', 'ru', 'tr', 'uk']
    }
    signingConfigs {
        releaseConfig {
            // check whether we are in release workflow or on dev system
            if ( System.getenv("KEYSTORE_FILE") != null )
            {
                storeFile file(System.getenv('KEYSTORE_FILE'))
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('KEYSTORE_ALIAS')
                keyPassword System.getenv('KEYSTORE_PASSPHRASE')
            } else {
                storeFile file("release.keystore")
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('KEYSTORE_ALIAS')
                keyPassword System.getenv('KEYSTORE_PASSPHRASE')
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    buildFeatures {
        viewBinding true
    }
    lint {
        lintConfig file("lint.xml")
    }
    namespace 'org.eu.exodus_privacy.exodusprivacy'
}

kapt {
    correctErrorTypes true
}

dependencies {

    // r8
    implementation 'com.android.tools:r8:8.0.40'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'io.noties.markwon:core:4.6.2'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.browser:browser:1.5.0'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
    implementation 'androidx.test.ext:junit-ktx:1.1.5'

    // Navigation Components
    def nav_version = '2.5.3'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit and Moshi
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // okhttp
    def okhttp_version = '4.11.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Hilt
    def hilt_version = '2.46.1'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"

    // Lifecycle
    def lifecycle_version = '2.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // Room
    def room_version = '2.5.1'
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"

    // KTX
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation 'androidx.activity:activity-ktx:1.7.1'

    // unit tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.10.3'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2"
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "androidx.test:runner:1.5.2"
    testImplementation "androidx.test:rules:1.5.0"
    testImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
    kaptTest 'com.google.dagger:hilt-compiler:2.46.1'

    // instrumentation tests
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.46.1'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test:core-ktx:1.5.0"
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation "androidx.room:room-testing:2.5.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2"
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        return ["-Aroom.schemaLocation=${schemaDir.path}".toString()]
    }
}

